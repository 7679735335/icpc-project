#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

# at 1st check what is the directory we are working
\end_layout

\begin_layout Plain Layout

getwd()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

# now we want to call data frame in our project
\end_layout

\begin_layout Plain Layout

df=read.csv('icpc.csv')
\end_layout

\begin_layout Plain Layout

head(df)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#How many years contained in this data set
\end_layout

\begin_layout Plain Layout

Years=unique(df$Year)
\end_layout

\begin_layout Plain Layout

Years
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#How many years contained in this data set
\end_layout

\begin_layout Plain Layout

Years=unique(df$Year)
\end_layout

\begin_layout Plain Layout

Years
\end_layout

\begin_layout Plain Layout

# Host name for respected years 
\end_layout

\begin_layout Plain Layout

Host_names=c()
\end_layout

\begin_layout Plain Layout

for(i in Years){
\end_layout

\begin_layout Plain Layout

  Host_names=c(Host_names,unique(df[df$Year==i,'Host']))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

Host_names
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for(i in 1:length(Years)){
\end_layout

\begin_layout Plain Layout

  cat(Years[i],"=>",Host_names[i],"
\backslash
n")
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#For 2020 and host country name is Russia
\end_layout

\begin_layout Plain Layout

Ru=df[df$Year==2020,]
\end_layout

\begin_layout Plain Layout

head(Ru)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

#bar diagram for university due to top rank
\end_layout

\begin_layout Plain Layout

library(plotly)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

un <- Ru$University
\end_layout

\begin_layout Plain Layout

score <- Ru$Percentage.Score
\end_layout

\begin_layout Plain Layout

data <- data.frame(un, score, stringsAsFactors = FALSE)
\end_layout

\begin_layout Plain Layout

data$un <- factor(data$un, levels = unique(data$un)[order(data$score, decreasing
 = TRUE)])
\end_layout

\begin_layout Plain Layout

fig=plot_ly(data, x = ~un, y = ~score, type = "bar",
\end_layout

\begin_layout Plain Layout

        marker = list(color = ~score))
\end_layout

\begin_layout Plain Layout

fig = fig %>% layout(title = "University Vs Score",
\end_layout

\begin_layout Plain Layout

                      xaxis = list(title = "University names"),
\end_layout

\begin_layout Plain Layout

                      yaxis = list(title = "Score"))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot1.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/fhhgj.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

#Top 10 bar diagram
\end_layout

\begin_layout Plain Layout

data10=head(data,10)
\end_layout

\begin_layout Plain Layout

fig=plot_ly(data10,x=~un,y=~score,type = "bar",
\end_layout

\begin_layout Plain Layout

            marker = list(color = ~score))
\end_layout

\begin_layout Plain Layout

fig = fig %>% layout(title = "top 10 university vs there score",
\end_layout

\begin_layout Plain Layout

                     xaxis = list(title = "University names"),
\end_layout

\begin_layout Plain Layout

                     yaxis = list(title = "Score"))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot2.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot2.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

# bar diagram for top 100 university for 20 years
\end_layout

\begin_layout Plain Layout

un <- Ru$University
\end_layout

\begin_layout Plain Layout

score <- Ru$num_of_top_100_last_20_year
\end_layout

\begin_layout Plain Layout

data100 <- data.frame(un, score, stringsAsFactors = FALSE)
\end_layout

\begin_layout Plain Layout

data100$un <- factor(data100$un, 
\end_layout

\begin_layout Plain Layout

              levels = unique(data100$un)[order(data100$score, decreasing
 = TRUE)])
\end_layout

\begin_layout Plain Layout

fig=plot_ly(data100, x = ~un, y = ~score, type = "bar",
\end_layout

\begin_layout Plain Layout

            marker = list(color = ~score))
\end_layout

\begin_layout Plain Layout

fig = fig %>% layout(title = "University Vs Score",
\end_layout

\begin_layout Plain Layout

                     xaxis = list(title = "University names"),
\end_layout

\begin_layout Plain Layout

                     yaxis = list(title = "Score"))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot3.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot3.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

#Top 10 bar diagram for top 100 university for 20 years
\end_layout

\begin_layout Plain Layout

data10010=head(data100,10)
\end_layout

\begin_layout Plain Layout

fig=plot_ly(data10010,x=~un,y=~score,type = "bar",
\end_layout

\begin_layout Plain Layout

            marker = list(color = ~score))
\end_layout

\begin_layout Plain Layout

fig = fig %>% layout(title = "top 10 university vs there score",
\end_layout

\begin_layout Plain Layout

                     xaxis = list(title = "University names"),
\end_layout

\begin_layout Plain Layout

                     yaxis = list(title = "Score"))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot4.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot4.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

#Percent medal got university
\end_layout

\begin_layout Plain Layout

fig <- plot_ly(df, labels = ~Medal, type = 'pie')
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot5.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot5.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#a bubble chart for that university which universities got the prize
\end_layout

\begin_layout Plain Layout

Medal=df[df$Medal=='Yes',]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

fig=plot_ly(Medal,x=~University,y=~Percentage.Score,
\end_layout

\begin_layout Plain Layout

            type = "scatter",color = ~Year,
\end_layout

\begin_layout Plain Layout

            mode="markers",
\end_layout

\begin_layout Plain Layout

            marker = list(size = ~num_of_top_100_last_20_year, opacity =
 0.5),
\end_layout

\begin_layout Plain Layout

            hoverinfo="text",
\end_layout

\begin_layout Plain Layout

            text=paste(Medal$University,"<br>",
\end_layout

\begin_layout Plain Layout

                       Medal$Country,"<br>","score :",
\end_layout

\begin_layout Plain Layout

                       Medal$Percentage.Score,"<br>",
\end_layout

\begin_layout Plain Layout

                       "num of top 100 last 20 year",Medal$num_of_top_100_last_2
0_year))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot6.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot6.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

flt=Medal[,c('University',"num_of_top_100_last_20_year")]
\end_layout

\begin_layout Plain Layout

flt=unique(flt)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

# bar plot for sumvalue data frame
\end_layout

\begin_layout Plain Layout

un <- flt$University
\end_layout

\begin_layout Plain Layout

score <- flt$num_of_top_100_last_20_year
\end_layout

\begin_layout Plain Layout

data <- data.frame(un, score, stringsAsFactors = FALSE)
\end_layout

\begin_layout Plain Layout

data$un <- factor(data$un, levels = unique(data$un)[order(data$score, decreasing
 = TRUE)])
\end_layout

\begin_layout Plain Layout

fig=plot_ly(data, x = ~un, y = ~score, type = "bar",
\end_layout

\begin_layout Plain Layout

            marker = list(color = ~score))
\end_layout

\begin_layout Plain Layout

fig = fig %>% layout(title = "University Vs Score",
\end_layout

\begin_layout Plain Layout

                     xaxis = list(title = "University names"),
\end_layout

\begin_layout Plain Layout

                     yaxis = list(title = "Score"))
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot7.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot7.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

# We will able to predict the next champion and top most team
\end_layout

\begin_layout Plain Layout

flt[flt$num_of_top_100_last_20_year==max(flt$num_of_top_100_last_20_year),"Unive
rsity"]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#another way
\end_layout

\begin_layout Plain Layout

columns <- c("Year","Host","World.Final.Ranking","University","Country","Medal","P
ercentage.Score","num_of_top_100_last_20_year")
\end_layout

\begin_layout Plain Layout

myData = data.frame(matrix(nrow = 0, ncol = length(columns)))
\end_layout

\begin_layout Plain Layout

colnames(myData) = columns
\end_layout

\begin_layout Plain Layout

years_name=unique(df$Year)
\end_layout

\begin_layout Plain Layout

for( i in 1:length(years_name)){
\end_layout

\begin_layout Plain Layout

  y=head(df[df$Year==years_name[i],],5)
\end_layout

\begin_layout Plain Layout

  myData=merge(y,myData,by=colnames(myData),all = TRUE)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

head(myData)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=F>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

fig=plot_ly(myData,x=~World.Final.Ranking,y=~Percentage.Score,type = 'bar',
 frame = ~Year,
\end_layout

\begin_layout Plain Layout

            hoverinfo="text",
\end_layout

\begin_layout Plain Layout

            text=paste(myData$University,"<br>Rank:",myData$World.Final.Ranking,"<
br>Country:",myData$Country))
\end_layout

\begin_layout Plain Layout

fig <- fig %>%
\end_layout

\begin_layout Plain Layout

  animation_button(
\end_layout

\begin_layout Plain Layout

    x = 1, xanchor = "right", y = 0, yanchor = "bottom"
\end_layout

\begin_layout Plain Layout

  )
\end_layout

\begin_layout Plain Layout

fig <- fig %>%
\end_layout

\begin_layout Plain Layout

  animation_slider(
\end_layout

\begin_layout Plain Layout

    currentvalue = list(prefix = "YEAR ", font = list(color="red"))
\end_layout

\begin_layout Plain Layout

  )
\end_layout

\begin_layout Plain Layout

fig
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Rplot8.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "View"
target "file:///C:/Users/SVMY/Documents/ICPC%20Project/plot8.html"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=T>>=
\end_layout

\begin_layout Plain Layout

#most frequency University in top 5
\end_layout

\begin_layout Plain Layout

tt <- table(myData$University)
\end_layout

\begin_layout Plain Layout

names(tt[tt==max(tt)])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

moscow=myData[myData$University=="St.
 Petersburg State University" ,]
\end_layout

\begin_layout Plain Layout

moscow
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
